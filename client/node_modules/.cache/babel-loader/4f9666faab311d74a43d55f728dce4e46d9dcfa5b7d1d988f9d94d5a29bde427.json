{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\Desktop\\\\MERN-Student-Courses-App-main\\\\client\\\\src\\\\components\\\\addStudentToCourse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n  const [form, setForm] = useState({\n    courseCode: \"\",\n    courseName: \"\",\n    section: \"\",\n    semester: \"\",\n    students: [],\n    selectedStudent: \"\"\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const courseId = params.id.toString();\n      const courseResponse = await fetch(`http://localhost:5000/course/${courseId}`);\n      if (!courseResponse.ok) {\n        const message = `An error has occurred: ${courseResponse.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const course = await courseResponse.json();\n      if (!course) {\n        window.alert(`Course with id ${courseId} not found`);\n        navigate(\"/\");\n        return;\n      }\n      const studentsResponse = await fetch(\"http://localhost:5000/student\");\n      const students = await studentsResponse.json();\n      setForm({\n        ...course,\n        students,\n        selectedStudent: \"\"\n      });\n    }\n    fetchData();\n  }, [params.id, navigate]);\n  function updateForm(value) {\n    setForm(prev => ({\n      ...prev,\n      ...value\n    }));\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!form.selectedStudent) {\n      window.alert(\"Please select a student.\");\n      return;\n    }\n    const studentId = form.selectedStudent;\n    const editedCourse = {\n      studentId: studentId\n    };\n    await fetch(`http://localhost:5000/course/${params.id}/addStudent`, {\n      method: \"POST\",\n      body: JSON.stringify(editedCourse),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    navigate(\"/\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Student To Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selectedStudent\",\n          children: \"Select Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"selectedStudent\",\n          value: form.selectedStudent,\n          onChange: e => updateForm({\n            selectedStudent: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), form.students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: student._id,\n            children: [student.firstName, \" \", student.lastName]\n          }, student._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Course\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"RA8pWTjZJNL6SKrTYK/XYTj2Q4g=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Edit","_s","form","setForm","courseCode","courseName","section","semester","students","selectedStudent","params","navigate","fetchData","courseId","id","toString","courseResponse","fetch","ok","message","statusText","window","alert","course","json","studentsResponse","updateForm","value","prev","onSubmit","e","preventDefault","studentId","editedCourse","method","body","JSON","stringify","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","onChange","target","map","student","_id","firstName","lastName","type","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/OneDrive/Desktop/MERN-Student-Courses-App-main/client/src/components/addStudentToCourse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    courseCode: \"\",\n    courseName: \"\",\n    section: \"\",\n    semester: \"\",\n    students: [],\n    selectedStudent: \"\",\n  });\n\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const courseId = params.id.toString();\n\n      const courseResponse = await fetch(\n        `http://localhost:5000/course/${courseId}`\n      );\n\n      if (!courseResponse.ok) {\n        const message = `An error has occurred: ${courseResponse.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const course = await courseResponse.json();\n\n      if (!course) {\n        window.alert(`Course with id ${courseId} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      const studentsResponse = await fetch(\"http://localhost:5000/student\");\n      const students = await studentsResponse.json();\n\n      setForm({\n        ...course,\n        students,\n        selectedStudent: \"\",\n      });\n    }\n\n    fetchData();\n  }, [params.id, navigate]);\n\n  function updateForm(value) {\n    setForm((prev) => ({ ...prev, ...value }));\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    if (!form.selectedStudent) {\n      window.alert(\"Please select a student.\");\n      return;\n    }\n\n    const studentId = form.selectedStudent;\n\n    const editedCourse = {\n      studentId: studentId,\n    };\n\n    await fetch(`http://localhost:5000/course/${params.id}/addStudent`, {\n      method: \"POST\",\n      body: JSON.stringify(editedCourse),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  return (\n    <div>\n      <br></br>\n      <h3>Add Student To Course</h3>\n      <br></br>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"selectedStudent\">Select Student</label>\n          <select\n            className=\"form-control\"\n            id=\"selectedStudent\"\n            value={form.selectedStudent}\n            onChange={(e) => updateForm({ selectedStudent: e.target.value })}\n          >\n            <option value=\"\">Select a student</option>\n            {form.students.map((student) => (\n              <option key={student._id} value={student._id}>\n                {student.firstName} {student.lastName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Course\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n        <br></br>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}