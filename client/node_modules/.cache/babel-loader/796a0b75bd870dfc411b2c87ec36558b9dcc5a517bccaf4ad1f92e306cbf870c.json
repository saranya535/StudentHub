{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\Desktop\\\\MERN-Student-Courses-App-main\\\\client\\\\src\\\\components\\\\addStudentToCourse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n  const [form, setForm] = useState({\n    // State for form fields\n    courseCode: \"\",\n    courseName: \"\",\n    section: \"\",\n    semester: \"\",\n    students: [],\n    selectedStudent: \"\"\n  });\n\n  // Get the id parameter from the URL\n  const params = useParams();\n  const navigate = useNavigate();\n\n  // Fetch course and student data based on the id parameter\n  useEffect(() => {\n    async function fetchData() {\n      const courseId = params.id.toString();\n\n      // Fetch course data\n      const courseResponse = await fetch(`http://localhost:5000/course/${courseId}`);\n      if (!courseResponse.ok) {\n        const message = `An error has occurred: ${courseResponse.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const course = await courseResponse.json();\n      if (!course) {\n        window.alert(`Course with id ${courseId} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      // Fetch student data\n      const studentsResponse = await fetch(\"http://localhost:5000/student\");\n      const students = await studentsResponse.json();\n\n      // Update form state with course and student data\n      setForm({\n        ...course,\n        students,\n        selectedStudent: \"\"\n      });\n    }\n    fetchData();\n  }, [params.id, navigate]);\n\n  // Function to update form state\n  function updateForm(value) {\n    setForm(prev => ({\n      ...prev,\n      ...value\n    }));\n  }\n\n  // Function to handle form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // Check if a student is selected\n    if (!form.selectedStudent) {\n      window.alert(\"Please select a student.\");\n      return;\n    }\n\n    // Get the selected student id\n    const studentId = form.selectedStudent;\n\n    // Prepare data to add student to course\n    const editedCourse = {\n      studentId: studentId\n    };\n\n    // Send POST request to add student to course\n    await fetch(`http://localhost:5000/course/${params.id}/addStudent`, {\n      method: \"POST\",\n      body: JSON.stringify(editedCourse),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    // Redirect to the home page after updating the course\n    navigate(\"/\");\n  }\n  return (\n    /*#__PURE__*/\n    //eslint-disable-next-line\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: \"center\",\n            marginTop: \"20px\"\n          },\n          children: \"ADD STUDENT TO COURSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          style: {\n            width: \"400px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"selectedStudent\",\n              children: \"Select Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"selectedStudent\",\n              value: form.selectedStudent,\n              onChange: e => updateForm({\n                selectedStudent: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 13\n              }, this), form.students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: student._id,\n                children: [student.firstName, \" \", student.lastName]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Update Course\",\n              className: \"btn btn-primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(Edit, \"N+RzrT5CtS1zX9xanSVBjrYFCEU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Edit","_s","form","setForm","courseCode","courseName","section","semester","students","selectedStudent","params","navigate","fetchData","courseId","id","toString","courseResponse","fetch","ok","message","statusText","window","alert","course","json","studentsResponse","updateForm","value","prev","onSubmit","e","preventDefault","studentId","editedCourse","method","body","JSON","stringify","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","justifyContent","minHeight","textAlign","marginTop","width","className","htmlFor","onChange","target","map","student","_id","firstName","lastName","type","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/OneDrive/Desktop/MERN-Student-Courses-App-main/client/src/components/addStudentToCourse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    // State for form fields\n    courseCode: \"\",\n    courseName: \"\",\n    section: \"\",\n    semester: \"\",\n    students: [],\n    selectedStudent: \"\",\n  });\n\n  // Get the id parameter from the URL\n  const params = useParams();\n  const navigate = useNavigate();\n\n  // Fetch course and student data based on the id parameter\n  useEffect(() => {\n    async function fetchData() {\n      const courseId = params.id.toString();\n\n      // Fetch course data\n      const courseResponse = await fetch(\n        `http://localhost:5000/course/${courseId}`\n      );\n\n      if (!courseResponse.ok) {\n        const message = `An error has occurred: ${courseResponse.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const course = await courseResponse.json();\n\n      if (!course) {\n        window.alert(`Course with id ${courseId} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      // Fetch student data\n      const studentsResponse = await fetch(\"http://localhost:5000/student\");\n      const students = await studentsResponse.json();\n\n      // Update form state with course and student data\n      setForm({\n        ...course,\n        students,\n        selectedStudent: \"\",\n      });\n    }\n\n    fetchData();\n  }, [params.id, navigate]);\n\n  // Function to update form state\n  function updateForm(value) {\n    setForm((prev) => ({ ...prev, ...value }));\n  }\n\n   // Function to handle form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // Check if a student is selected\n    if (!form.selectedStudent) {\n      window.alert(\"Please select a student.\");\n      return;\n    }\n\n    // Get the selected student id\n    const studentId = form.selectedStudent;\n\n    // Prepare data to add student to course\n    const editedCourse = {\n      studentId: studentId,\n    };\n\n    // Send POST request to add student to course\n    await fetch(`http://localhost:5000/course/${params.id}/addStudent`, {\n      method: \"POST\",\n      body: JSON.stringify(editedCourse),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    // Redirect to the home page after updating the course\n    navigate(\"/\");\n  }\n\n  return (\n    //eslint-disable-next-line\n    <><h2></h2><div style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"100vh\"\n    }}>\n      <br></br>\n      <h3 style={{textAlign:\"center\", marginTop:\"20px\"}}>ADD STUDENT TO COURSE</h3>\n      <br></br>\n      <form onSubmit={onSubmit} style={{ width: \"400px\"}}>\n        <div className=\"form-group\">\n          <label htmlFor=\"selectedStudent\">Select Student</label>\n          <select\n            className=\"form-control\"\n            id=\"selectedStudent\"\n            value={form.selectedStudent}\n            onChange={(e) => updateForm({ selectedStudent: e.target.value })}\n          >\n            <option value=\"\">Select a student</option>\n            {form.students.map((student) => (\n              <option key={student._id} value={student._id}>\n                {student.firstName} {student.lastName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <br></br>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Course\"\n            className=\"btn btn-primary\" />\n        </div>\n        <br></br>\n      </form>\n    </div></>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}